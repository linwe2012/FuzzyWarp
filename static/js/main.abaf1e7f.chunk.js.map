{"version":3,"sources":["algo.ts","canvas.js","render.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DPDirection","CanvasManager","frame","canvas","render","onresize","w","h","pickPosition","x","y","this","clearPickPosition","clientWidth","clientHeight","appendChild","mouseout","window","addEventListener","e","event","rect","getBoundingClientRect","clientX","left","clientY","top","pos","getCanvasRelativePosition","fn","onmousemove","onmousedown","onmouseup","onclick","sim_t","w1","w2","t0","t1","e_0_1","clone","sub","e_0_2","e_1_1","e_1_2","a_0_1","angleTo","a_1_1","a","length","b","Math","abs","PI","dpMinPath","graph","from","to","m","n","dp","Array","push","dir","Start","cost","sum","j","i","Infinity","downLeft","cur","Left","DownLeft","pathDir","min","shift","fuzzySimGraph","T0","T1","len0","len1","a0","b0","c0","a1","b1","c1","the_i","this_min","this_pathDir","lookup","Int32Array","mapped","getTriAngles","t","e0","e1","e2","bisect","add","area","v1","v2","sin","polygonArea","poly","end","smooth_a","c","poly_area_sum","S","smoothS","R","A","smoothKeyPoints","params","reverse_lookup","smooth","smooth_b","smooth_c","smooth_w1","smooth_w2","area_sum","k","u0","v0","w0","u","v","s","val","idx","sort","Mat2","data","elements","n11","n12","n21","n22","set","theta","cos","det","B","div","mulScalar","sqrt","Bi","inv","C","mul","ref","asin","console","log","U","fromRotate","M","det_","global2LocalCoords","vecs","V","Mi","z","map","apply2Vector3","local2GlobalCoords","FuzzyWarp","keyPoints","T0_local","T1_local","Trans_T1_to_T0","translate","Vector2","affine","begin","Vector3","raw_transform","Matrix3","referenceLocal","sim_w1","sim_w2","k1","t2m","mt","mFrom","mTo","inverse","getInverse","transform","multiplyMatrices","fromMatrix3","decompose","computeTransform","trans","A0","scaledIndentity","B0","C0","D0","applyMatrix3","multiplyScalar","newGlobalCoords","_interpLocal","Test","Render","props","useState","handle","setHandle","useWhat","setUseWhat","useEffect","document","getElementById","scene","THREE","renderer","antialias","powerPreference","domElement","Resize","camera","Aspect","setSize","setClearColor","position","control","TrackballControls","target","rotateSpeed","noPan","maxDistance","keys","ambientLight","light","plight","light1","light2","fuzzyWarper","planegeo","planeMesh","click_raycaster","dotsGroup","makeLineFromVertices","A_lineGeo","vertices","A_lineMaterial","color","linewidth","A_vertices","A_line","B_vertices","B_line","useAorB","setPickPosition","pointOnPlane","point","setFromCamera","intersectObject","GetMouseOnPlane","remove","isTransforming","time","deltaTime","middle","addDots","vec","mat","geo","requestAnimationFrame","inted","interp","next","init","RunAll","onClick","App","className","id","style","width","height","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abaf1e7f.chunk.js","sourcesContent":["import {Vector3, Matrix3, Vector2} from 'three'\r\n\r\ntype TriangleVec = [Vector3, Vector3, Vector3]\r\n\r\ninterface FuzzyParams {\r\n    smooth_a: number\r\n    smooth_b: number\r\n    smooth_c: number\r\n    smooth_w1: number\r\n    smooth_w2: number\r\n\r\n    // constraint: sim_w1 + sim_w2 = 1\r\n    sim_w1: number\r\n    sim_w2:number\r\n}\r\n\r\n\r\nfunction sim_t(w1:number, w2: number, \r\n    t0: TriangleVec, t1: TriangleVec) {\r\n    \r\n    let e_0_1 = t0[0].clone().sub(t0[1])\r\n    let e_0_2 = t0[2].clone().sub(t0[1])\r\n\r\n    let e_1_1 = t1[0].clone().sub(t1[1])\r\n    let e_1_2 = t1[2].clone().sub(t1[1])\r\n\r\n    const a_0_1 = e_0_1.angleTo(e_0_2)\r\n    const a_1_1 = e_1_1.angleTo(e_1_2)\r\n\r\n    const a = e_0_1.length() * e_1_2.length()\r\n    const b = e_1_1.length() * e_0_2.length()\r\n    const nom =  Math.abs(a-b)\r\n    const denom = a+b\r\n\r\n    const angle = Math.abs(a_0_1 - a_1_1) / 2.0 / Math.PI\r\n\r\n    return w1*(1-nom/denom) + w2*(1-angle)\r\n}\r\n\r\nfunction sim_p(w1: number, w2:number, T0: Vector3[], T1: Vector3[]) {\r\n    const end = T0.length - 2\r\n    let sum = 0;\r\n\r\n    for(let i = 0; i < end; ++i) {\r\n        sum += sim_t(w1, w2, \r\n            [T0[i], T0[i+1], T0[i+2]],\r\n            [T1[i], T1[i+1], T1[i+2]]\r\n        )\r\n    }\r\n\r\n    // Now we tackle the boundries:\r\n    sum += sim_t(w1, w2, \r\n        [T0[end], T0[end+1], T0[0]],\r\n        [T1[end], T1[end+1], T1[0]]\r\n    )\r\n\r\n    //TODO: I really dont know which number to devide the sum,\r\n    // but it won't effect the final result at all\r\n    sum /= (T0.length)\r\n    return sum;\r\n}\r\n\r\n\r\n// DP find Min path\r\n// ------------------------------\r\nenum DPDirection {\r\n    Left,\r\n    DownLeft,\r\n    Start\r\n}\r\n\r\ninterface DPInfo {\r\n    dir: DPDirection\r\n    cost: number\r\n}\r\n\r\ninterface Position2D {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nfunction dpMinPath(graph:number[][], from: Position2D, to: Position2D) : [number, DPDirection[]] {\r\n    const m = to.x - from.x;\r\n    const n = to.y - from.y;\r\n\r\n    const dp = new Array<Array<DPInfo>>();\r\n    // initialize values for DP\r\n    dp[0] = new Array<DPInfo>();\r\n    dp[0].push({\r\n        dir: DPDirection.Start,\r\n        cost: graph[from.x][from.y]\r\n    })\r\n\r\n    {\r\n        let sum = dp[0][0].cost\r\n        for(let j = 1; j < n; ++j) {\r\n            sum += graph[from.x][from.y + j]\r\n            dp[0].push({\r\n                dir: DPDirection.Start,\r\n                cost: sum\r\n            })\r\n        }\r\n    }\r\n\r\n    // compute all possible path\r\n    for(let i = 1; i < m; ++i) {\r\n        dp[i] = new Array<DPInfo>();\r\n        dp[i].push({\r\n            dir: DPDirection.Start,\r\n            cost: Infinity\r\n        })\r\n\r\n        for(let j = 1; j < n; ++j) {\r\n            const left = dp[i][j-1].cost\r\n            const downLeft = dp[i-1][j-1].cost;\r\n            const cur = graph[from.x+i][from.y+j]\r\n            if(left < downLeft) {\r\n                dp[i].push({\r\n                    dir: DPDirection.Left,\r\n                    cost: left + cur\r\n                })\r\n            }\r\n            else {\r\n                dp[i].push({\r\n                    dir: DPDirection.DownLeft,\r\n                    cost: downLeft + cur\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    // reconstruct path\r\n    const pathDir = new Array<DPDirection>();\r\n    let pos: Position2D = {\r\n        x: m - 1,\r\n        y: n - 1\r\n    }\r\n    const min = dp[pos.x][pos.y].cost;\r\n\r\n    while(pos.y || pos.x !== from.x) {\r\n        pathDir.push(dp[pos.x][pos.y].dir)\r\n        \r\n        if(dp[pos.x][pos.y].dir === DPDirection.Left) {\r\n            --pos.y\r\n        }\r\n        else {\r\n            --pos.x;\r\n            --pos.y;\r\n        }\r\n        if(dp[pos.x][pos.y].dir === DPDirection.Start) {\r\n            break;\r\n        }\r\n        // console.assert(pos.x >=0 && pos.y <= 0, \"DP failed: Out of Boundry\")\r\n    }\r\n    pathDir.shift();\r\n    return [min, pathDir]\r\n}\r\n\r\n\r\n\r\n// Use sim graph to compute a onto (surjection) mapping from T1 to T0\r\n// assumes: T0.len < T1.len\r\nfunction fuzzySimGraph(w1: number, w2:number, T0: Vector3[], T1: Vector3[]) {\r\n    // we extend (m + 2) x (n + 2) graphG to (m + 2) x (2 x (n + 2)-1) \r\n    // EG[i, j] = G[i, j mod(n + l)],\r\n    //const m = T0.length + 1\r\n    //const n = 2*(T1.length + 1)\r\n\r\n    // Part I: Compute fuzzy Graph\r\n    // ------------------------------\r\n    const len0 = T0.length\r\n    const len1 = T1.length\r\n\r\n    const graph = new Array<Array<number>>();\r\n\r\n\r\n    // Layout of the graph:\r\n    //\r\n    // 0 1 2 3 0 1 2 3\r\n    // - - - - - - - - (3)\r\n    // x x x x - - - - (2)\r\n    // x x x x - - - - (1)\r\n    // x x x x - - - - (0)\r\n    \r\n    // x is the part we need to compute, others are copied\r\n    // (0) will be copied to (3)\r\n    // the left x's will be copied to right\r\n\r\n    for(let i = 0; i < len0; ++i) {\r\n        graph[i] = new Array<number>()\r\n        for(let j = 0; j < len1; ++j) {\r\n            const a0 = (len0 + i - 1) % len0\r\n            const b0 = (a0 + 1) % len0\r\n            const c0 = (b0 + 1) % len0\r\n\r\n            const a1 = (len1 + j - 1) % len1\r\n            const b1 = (a1 + 1) % len1\r\n            const c1 = (b1 + 1) % len1\r\n\r\n            graph[i].push(1 - sim_t(w1, w2, \r\n                [T0[a0], T0[b0], T0[c0]],\r\n                [T1[a1], T1[b1], T1[c1]]\r\n                ))\r\n        }\r\n\r\n        graph[i].push(...graph[i])\r\n    }\r\n    graph.push(graph[0])\r\n    \r\n    let min = Infinity\r\n    let pathDir = new Array<DPDirection>()\r\n    let the_i = -1;\r\n\r\n    for(let i = 0; i < len0; ++i) {\r\n        const [this_min, this_pathDir] = dpMinPath(graph, {x:0, y:i}, {x:len0+1, y:i+len1+1});\r\n        if(min > this_min) {\r\n            the_i = i;\r\n            pathDir = this_pathDir;\r\n            min = this_min\r\n        }\r\n    }\r\n\r\n    // lookup table mapping T1 index to T0 index\r\n    const lookup = new Int32Array(len1)\r\n    let mapped = len0 - 1;\r\n    for(let i = 0; i < len1-1; ++i) {\r\n        const index = the_i + (len1-1-i)\r\n        lookup[index % len1] = mapped;\r\n        if(pathDir[i] === DPDirection.DownLeft) {\r\n            --mapped;\r\n            if(mapped < 0) {\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n    lookup[the_i % len1] = 0\r\n\r\n    return lookup;\r\n}\r\n\r\n// Get angles of triangles\r\ntype AnglesOfTriangle  = [number, number, number]\r\nconst getTriAngles = (t: TriangleVec) : AnglesOfTriangle => {\r\n    const e0 = t[0].clone().sub(t[1])\r\n    const e1 = t[2].clone().sub(t[1])\r\n    const e2 = t[2].clone().sub(t[0])\r\n\r\n    const a1 = e0.angleTo(e1)\r\n    const a0 = e2.angleTo(e1)\r\n    const a2 = Math.PI - a1 - a0;\r\n    return [a0, a1, a2]\r\n}\r\n\r\nfunction smoothS(w1:number, w2: number, \r\n    t0: TriangleVec, t1: TriangleVec) {\r\n    let e = 0;\r\n    let a = 0;\r\n    for(let i = 0; i < 3; ++i) {\r\n         const e0 = t0[i].clone().sub(t0[(i+1)%3]).length()\r\n         const e1 = t1[i].clone().sub(t1[(i+1)%3]).length()\r\n         e += Math.abs(e0-e1) / (e0+e1)\r\n    }\r\n\r\n    const a0 = getTriAngles(t0)\r\n    const a1 = getTriAngles(t1)\r\n    for(let i = 0; i < 3; ++i) {\r\n        a += Math.abs(a0[i] - a1[i])\r\n    }\r\n    a /= Math.PI\r\n\r\n    return w1*(1-e)+w2*(1-a)\r\n}\r\n\r\nfunction bisect(t0:TriangleVec) {\r\n    return t0[0].clone().sub(t0[1]).add(\r\n        t0[2].clone().sub(t0[1])\r\n    )\r\n}\r\n\r\nfunction area(t0:TriangleVec) {\r\n    const v1 = t0[0].clone().sub(t0[1])\r\n    const v2 = t0[2].clone().sub(t0[1])\r\n    return Math.abs(0.5*v1.length() * v2.length() * Math.sin(v1.angleTo(v2)))\r\n}\r\n\r\n// see also: https://www.mathopenref.com/coordpolygonarea.html\r\nfunction polygonArea(poly:Vector3[]) {\r\n    let sum = 0\r\n    const end = poly.length - 1\r\n    for(let i = 0; i < end; ++i) {\r\n        sum += poly[i].x*poly[i+1].y - poly[i].y*poly[i+1].x\r\n    }\r\n    sum += poly[end].x*poly[0].y - poly[end].y*poly[0].x\r\n    sum /= 2\r\n    return Math.abs(sum)\r\n}\r\n\r\nfunction smooth_a(a:number, b:number, c:number, w1:number, w2: number, \r\n    poly_area_sum: number, t0: TriangleVec, t1: TriangleVec) {\r\n    const S = smoothS(w1, w2, t0, t1);\r\n    const R = bisect(t0).angleTo(bisect(t1))\r\n    const A = (area(t0) + area(t1)) / poly_area_sum\r\n    if (A < 1e-2) {\r\n        return -Infinity\r\n    }\r\n    return a * S + b * (1-R/Math.PI) + c * A\r\n}\r\n/*\r\n\r\nfunction smoothKeyPoints(T0:Vector3[], T1:Vector3[], lookup: Int32Array, params:FuzzyParams) {\r\n    interface Smooth {\r\n        val: number\r\n        idx: number\r\n    };\r\n\r\n    const reverse_lookup = new Array<number>()\r\n    for(let i = 0; i < T1.length; ++i) {\r\n        reverse_lookup[lookup[i]] = i\r\n    }\r\n\r\n    const smooth = new Array<Smooth>();\r\n    const { smooth_a: a, smooth_b:b, smooth_c:c, smooth_w1: w1, smooth_w2: w2 } = params;\r\n\r\n    const area_sum = polygonArea(T0) + polygonArea(T1);\r\n\r\n    for(let i = 0; i < T0.length; ++i) {\r\n        const u0 = i;\r\n        const v0 = (i + 1) % T0.length;\r\n        const w0 = (i + 2) % T0.length;\r\n\r\n        const u = reverse_lookup[u0]\r\n        const v = reverse_lookup[v0]\r\n        const w = reverse_lookup[w0]\r\n        \r\n        const s = smooth_a(a, b, c, w1, w2, area_sum, \r\n            [T1[u], T1[v], T1[w]],\r\n            [T0[u0], T0[v0], T0[w0]]\r\n            );\r\n        //TODO: is idx `u` or `i`\r\n        smooth.push({\r\n            val: s,\r\n            idx: u\r\n        })\r\n    }\r\n\r\n    // sort in descending order\r\n    smooth.sort((a, b)=>(b.val - a.val))\r\n\r\n    return [ smooth[0].idx, smooth[1].idx, smooth[2].idx  ]\r\n}\r\n\r\n*/\r\nfunction smoothKeyPoints(T0:Vector3[], T1:Vector3[], lookup: Int32Array, params:FuzzyParams) {\r\n    interface Smooth {\r\n        val: number\r\n        idx: [number, number, number]\r\n    };\r\n\r\n    const reverse_lookup = new Array<number>()\r\n    for(let i = 0; i < T1.length; ++i) {\r\n        reverse_lookup[lookup[i]] = i\r\n    }\r\n\r\n    const smooth = new Array<Smooth>();\r\n    const { smooth_a: a, smooth_b:b, smooth_c:c, smooth_w1: w1, smooth_w2: w2 } = params;\r\n\r\n    const area_sum = polygonArea(T0) + polygonArea(T1);\r\n\r\n    for(let i = 0; i < T0.length; ++i) {\r\n        for(let j = 0; j < T0.length; ++j) {\r\n            for(let k = 0; k < T0.length; ++k) {\r\n                const u0 = i;\r\n                const v0 = j % T0.length;\r\n                const w0 = k % T0.length;\r\n\r\n                if(u0 == j || u0 == k || v0 == i || v0 == k || w0==i || w0 == j ){\r\n                    continue;\r\n                }\r\n                const u = reverse_lookup[u0]\r\n                const v = reverse_lookup[v0]\r\n                const w = reverse_lookup[w0]\r\n\r\n                const s = smooth_a(a, b, c, w1, w2, area_sum, \r\n                    [T1[u], T1[v], T1[w]],\r\n                    [T0[u0], T0[v0], T0[w0]]\r\n                    );\r\n                //TODO: is idx `u` or `i`\r\n            smooth.push({\r\n                val: s,\r\n                idx: [u, v, w]\r\n            })\r\n            }\r\n        }\r\n\r\n    }\r\n    // sort in descending order\r\n    smooth.sort((a, b)=>(b.val - a.val))\r\n    return smooth[0].idx\r\n}\r\n\r\nclass Mat2 {\r\n    // column major, in accordance with threejs\r\n    data = new Array<number>(4)\r\n    fromMatrix3(m: Matrix3) {\r\n        this.data[0] = m.elements[0]\r\n        this.data[1] = m.elements[1]\r\n        this.data[2] = m.elements[3]\r\n        this.data[3] = m.elements[4]\r\n        return this;\r\n    }\r\n\r\n    set(n11:number, n12:number, n21:number, n22:number) {\r\n        this.data[0] = n11; this.data[2] = n12;\r\n        this.data[1] = n21; this.data[3] = n22;\r\n        return this;\r\n    }\r\n\r\n    scaledIndentity(t:number) {\r\n        return this.set(\r\n            t, 0,\r\n            0, t\r\n        )\r\n    }\r\n\r\n    det() {\r\n        return (this.data[0] * this.data[3]) - (this.data[1] * this.data[2])\r\n    }\r\n\r\n    fromRotate(theta : number) {\r\n        const a = this.data\r\n        a[0] = Math.cos(theta)\r\n        a[1] = Math.sin(theta)\r\n        a[2] = -a[1]\r\n        a[3] = a[0]\r\n        return this;\r\n    }\r\n\r\n    apply2Vector3(v: Vector3) {\r\n        const x = v.x\r\n        const y = v.y\r\n        const a = this.data\r\n        v.x = a[0]*x + a[2]*y\r\n        v.y = a[1]*x + a[3]*y\r\n        return this;\r\n    }\r\n\r\n    // decompose to rotation theta & affine matrix\r\n    decompose() : [number, Mat2] {\r\n        const det = this.det();\r\n        const sign = 1// Math.sign(det)\r\n\r\n        const B = new Mat2();\r\n        const b = B.data;\r\n        const a = this.data;\r\n\r\n        b[0] = sign * a[3] + a[0];\r\n        b[1] = - sign * a[2] + a[1];\r\n        b[2] = - sign * a[1] + a[2];\r\n        b[3] = sign * a[0] + a[3];\r\n        \r\n        const div = b[0]*b[0] + b[1]*b[1]\r\n        B.mulScalar(1/Math.sqrt(div))\r\n\r\n        const Bi = new Mat2().inv(B)\r\n        const C = new Mat2().mul(Bi, this)\r\n\r\n        \r\n        const cos = b[0]\r\n        const sin = b[1]\r\n        //const theta = Math.asin(sin)\r\n\r\n        //return [theta, C]\r\n        const ref = Math.asin(Math.abs(sin))\r\n        let theta = ref;\r\n        console.log('ref,', ref)\r\n        if(cos > 0 && sin > 0) {\r\n            theta = ref;\r\n        }\r\n        else if(sin > 0 && cos < 0) {\r\n            theta = Math.PI - theta\r\n        }\r\n        else if(sin < 0 && cos < 0) {\r\n            theta = Math.PI + theta\r\n        }\r\n        else if(sin < 0 && cos > 0) {\r\n            theta = Math.PI * 2 - theta\r\n        }\r\n        if(theta > Math.PI) {\r\n            theta -= 2*Math.PI\r\n        }\r\n        const U = new Mat2().fromRotate(theta);\r\n        const T = new Mat2().mul(U, C);\r\n        return [theta, C]\r\n    }\r\n\r\n    inv(M: Mat2) {\r\n        const det_ = 1 / M.det();\r\n        const a = this.data;\r\n        const m = M.data\r\n        a[0] = det_ * m[3]\r\n        a[1] = -det_ * m[1]\r\n        a[2] = -det_ * m[2]\r\n        a[3] = det_ * m[0]\r\n        return this;\r\n    }\r\n\r\n    // C = A x B\r\n    mul(A:Mat2, B:Mat2) {\r\n        const a = A.data\r\n        const b = B.data\r\n        const m = this.data\r\n\r\n        m[0] = a[0]*b[0] + a[2] * b[1]\r\n        m[1] = a[1]*b[0] + a[3]*b[1]\r\n        m[2] = a[0]*b[2] + a[2]*b[3]\r\n        m[3] = a[1]*b[2] + a[3]*b[3]\r\n        return this;\r\n    }\r\n\r\n    add(A:Mat2) {\r\n        const a = A.data\r\n        const m = this.data\r\n        m[0] += a[0];\r\n        m[1] += a[1];\r\n        m[2] += a[2];\r\n        m[3] += a[3];\r\n        return this;\r\n    }\r\n\r\n    clone() {\r\n        const m = new Mat2()\r\n        m.data = [...this.data]\r\n        return m\r\n    }\r\n\r\n    mulScalar(t : number) {\r\n        this.data[0] *= t;\r\n        this.data[1] *= t;\r\n        this.data[2] *= t;\r\n        this.data[3] *= t;\r\n        return this\r\n    }\r\n}\r\n\r\ninterface Trans {\r\n    raw_transform: Matrix3\r\n    translate: Vector2\r\n    theta: number\r\n    affine: Mat2\r\n    begin: Vector3\r\n}\r\n\r\nfunction computeTransform(from:TriangleVec, to: TriangleVec) : Trans {\r\n    const t2m = (t:TriangleVec) =>{\r\n        const mt = new Matrix3()\r\n        mt.set(\r\n            t[0].x, t[1].x, t[2].x,\r\n            t[0].y, t[1].y, t[2].y,\r\n            1,      1,      1\r\n        )\r\n        return mt;\r\n    }\r\n\r\n    let mFrom = t2m(from)\r\n    let mTo = t2m(to);\r\n    \r\n    const inverse = new Matrix3().getInverse(mFrom)\r\n    const transform = new Matrix3().multiplyMatrices(mTo, inverse);\r\n    \r\n    const translate = new Vector2(transform.elements[6], transform.elements[7])\r\n    const complex = new Mat2().fromMatrix3(transform)\r\n    const [theta, affine] = complex.decompose();\r\n    \r\n    return {\r\n        raw_transform: transform,\r\n        translate: translate,\r\n        theta: theta,\r\n        affine: affine,\r\n        begin: from[1].clone()\r\n    }\r\n}\r\n\r\n\r\nfunction global2LocalCoords(t: TriangleVec, vecs: Vector3[]) {\r\n    const B = t[1].clone()\r\n    const U = t[2].clone().sub(B)\r\n    const V = t[0].clone().sub(B)\r\n\r\n    const M = new Mat2().set(\r\n        U.x, V.x,\r\n        U.y, V.y\r\n    )\r\n    const Mi = new Mat2().inv(M)\r\n\r\n    B.z = 0\r\n    return vecs.map(i=>{\r\n        const v = i.clone().sub(B);\r\n        Mi.apply2Vector3(v)\r\n        return v;\r\n    });\r\n}\r\n\r\nfunction local2GlobalCoords(t: TriangleVec, vecs: Vector3[]) {\r\n    const B = t[1].clone()\r\n    const U = t[2].clone().sub(B)\r\n    const V = t[0].clone().sub(B)\r\n\r\n    const M = new Mat2().set(\r\n        U.x, V.x,\r\n        U.y, V.y\r\n    )\r\n\r\n    B.z = 0;\r\n    return vecs.map(i=>{\r\n        const v = i.clone()\r\n        M.apply2Vector3(v)\r\n        v.add(B)\r\n        return v\r\n    })\r\n}\r\n\r\n\r\nexport class FuzzyWarp {\r\n    // onto mapping from T1 to T0\r\n    lookup = new Int32Array()\r\n    keyPoints = new Array<number>()\r\n    T0_local = new Array<Vector3>()\r\n    T1_local = new Array<Vector3>()\r\n\r\n    //T1_to_T0 = new Array<Trans>()\r\n    //T0_to_T1 = new Array<Trans>()\r\n\r\n    Trans_T1_to_T0: Trans = {\r\n        translate: new Vector2(),\r\n        theta: 0,\r\n        affine: new Mat2(),\r\n        begin: new Vector3(),\r\n        raw_transform: new Matrix3()\r\n    }\r\n\r\n    // for debug purpose\r\n    T0 = new Array<Vector3>()\r\n    T1 = new Array<Vector3>()\r\n\r\n    referenceLocal: any = null\r\n\r\n    init(T0:Vector3[], T1:Vector3[], params: FuzzyParams) {\r\n        this.T0 = [...T0]\r\n        this.T1 = [...T1]\r\n\r\n        this.lookup = fuzzySimGraph(params.sim_w1, params.sim_w2, T0, T1);\r\n        this.keyPoints = smoothKeyPoints(T0, T1, this.lookup, params);\r\n\r\n        console.log('lookup', this.lookup)\r\n        console.log('key points', this.keyPoints)\r\n\r\n        let k = this.keyPoints\r\n        this.T1_local = global2LocalCoords(\r\n            [T1[k[0]], T1[k[1]], T1[k[2]]],\r\n            T1\r\n        )\r\n\r\n        k = this.keyPoints.map(v=>this.lookup[v])\r\n        this.T0_local = global2LocalCoords(\r\n            [T0[k[0]], T0[k[1]], T0[k[2]]],\r\n            T0\r\n        )\r\n        \r\n        this.referenceLocal = [T0[k[0]], T0[k[1]], T0[k[2]]]\r\n        const debug_T0_Global = local2GlobalCoords(\r\n            [T0[k[0]], T0[k[1]], T0[k[2]]],\r\n            this.T0_local\r\n        )\r\n        \r\n        const k1 = this.keyPoints\r\n        this.Trans_T1_to_T0 = computeTransform(\r\n            [T1[k1[0]], T1[k1[1]], T1[k1[2]]],\r\n            [T0[k[0]], T0[k[1]], T0[k[2]]]\r\n        )\r\n        \r\n        const t = 1;\r\n        const trans = this.Trans_T1_to_T0;\r\n        const A0 = new Mat2().scaledIndentity(1-t)\r\n        const B0 = new Mat2().fromRotate(t * trans.theta)\r\n        const C0 = trans.affine.clone().mulScalar(t)\r\n        const D0 = new Mat2().mul(B0, C0)\r\n        A0.add(D0)\r\n        const newGlobalCoords = this.keyPoints.map(v=>{\r\n            const i = this.T1[v].clone()\r\n            A0.apply2Vector3(i)\r\n            return i\r\n        })\r\n        \r\n        const added = newGlobalCoords.map(v=>{\r\n            const i =  v.clone()\r\n            i.add(new Vector3(trans.translate.x, trans.translate.y));\r\n            return i;\r\n        })\r\n\r\n        const debug_nde_ = this.keyPoints.map(v=>{\r\n            const i = this.T1[v].clone()\r\n            i.z = 1;\r\n            i.applyMatrix3(trans.raw_transform)\r\n            return i;\r\n        })\r\n\r\n        console.log(this.Trans_T1_to_T0)\r\n    }\r\n\r\n    private _interpLocal(t:number) {\r\n        return this.T1_local.map((v, idx)=>{\r\n            const v0 = v.clone().multiplyScalar(1-t).add(\r\n                this.T0_local[this.lookup[idx]].clone().multiplyScalar(t)\r\n            )\r\n            v0.z = v.z\r\n            return v0\r\n        })\r\n    }\r\n\r\n    interp(t: number) {\r\n        const trans = this.Trans_T1_to_T0 // this.T1_to_T0[1]\r\n\r\n        const A0 = new Mat2().scaledIndentity(1-t)\r\n        const B0 = new Mat2().fromRotate(t * trans.theta)\r\n        const C0 = trans.affine.clone().mulScalar(t)\r\n        const D0 = new Mat2().mul(B0, C0)\r\n        A0.add(D0)\r\n\r\n        const newGlobalCoords = this.keyPoints.map(v=>{\r\n            const i = this.T1[v].clone()\r\n            A0.apply2Vector3(i)\r\n            return i\r\n        })\r\n\r\n        for(let v of newGlobalCoords) {\r\n            v.add(new Vector3(trans.translate.x*t, trans.translate.y*t))\r\n        }\r\n\r\n        \r\n\r\n        //return local2GlobalCoords(\r\n        //    newGlobalCoords as TriangleVec,\r\n        //    this.T0_local\r\n        //)\r\n\r\n        return local2GlobalCoords(\r\n            newGlobalCoords as TriangleVec,\r\n            this._interpLocal(t)\r\n        )\r\n    }\r\n}\r\n\r\nexport function getDefaultFuzzyParams() : FuzzyParams {\r\n    return{\r\n        smooth_a: 0.2, // shape similarity\r\n        smooth_b: 0.3, // min rotation\r\n        smooth_c: 0.5, // max area coverage\r\n        smooth_w1: 0.5,\r\n        smooth_w2: 0.5,\r\n\r\n        sim_w1: 0.5,\r\n        sim_w2: 0.5\r\n    }\r\n}\r\n\r\nfunction AssertArrayEqual<T>(a: ArrayLike<T>, b: ArrayLike<T>) {\r\n    if(a.length !== b.length) {\r\n        throw \"Length no match\"\r\n    }\r\n    for(let i = 0; i < a.length; ++i) {\r\n        if(a[i] !== b[i]) {\r\n            throw `Mismatch at: ${i}`\r\n        }\r\n    }\r\n}\r\n\r\nconst TestFuzzyGraph = ()=>{\r\n    const data = [\r\n        [-1.0, -1.0, 0],\r\n        [0, -0.9, 0],\r\n        [0, 0, 0],\r\n        [-1, 1, 0]\r\n    ]\r\n\r\n    const vdata = data.map(v=>new Vector3(...v))\r\n    const arr = new Array<number>()\r\n    const vdata2 = vdata.map(v=>{\r\n        const x = v.clone()\r\n        x.x += 2;\r\n        return x;\r\n    })\r\n    for(let i = 0; i < vdata.length; ++i) {\r\n        arr.push(i)\r\n    }\r\n\r\n    vdata2.push(vdata2.shift() as Vector3);\r\n    arr.push(arr.shift() as number);\r\n\r\n\r\n    const lookup = fuzzySimGraph(0.5, 0.5, vdata, vdata2)\r\n    AssertArrayEqual(lookup, arr)\r\n\r\n    const params = getDefaultFuzzyParams()\r\n    const keyPoints = smoothKeyPoints(vdata, vdata2, lookup, params)\r\n\r\n    const fuzzy = new FuzzyWarp();\r\n    fuzzy.init(vdata, vdata2, params)\r\n    fuzzy.interp(0.1);\r\n    fuzzy.interp(1);\r\n}\r\n\r\nconst Test = () => {\r\n    //TestFuzzyGraph()\r\n}\r\nexport { Test }","// import * as THREE from 'three'\r\n\r\n// import { MapColorToDiscrete, BeginingPrime, Integration, ComputeTransformMatrix } from './utils'\r\n\r\n\r\nexport class CanvasManager {\r\n    canvas = null\r\n    w = 0\r\n    h = 0\r\n    pickPosition = {\r\n        x: 0,\r\n        y: 0\r\n    }\r\n    frame = null\r\n\r\n    constructor(frame, canvas, render, onresize) {\r\n        this.clearPickPosition()\r\n        this.canvas = canvas\r\n        this.w = frame.clientWidth\r\n        this.h = frame.clientHeight\r\n        frame.appendChild(canvas)\r\n        frame.mouseout = ()=> this.clearPickPosition()\r\n        this.frame = frame\r\n        window.addEventListener('resize', (e)=>{\r\n            this.w = this.frame.clientWidth\r\n            this.h = this.frame.clientHeight\r\n            // render.setSize(this.w, this.h)\r\n            onresize(this.w, this.h)\r\n        })\r\n    }\r\n    \r\n    set onmousemove(fn) {\r\n        this.frame.onmousemove = fn\r\n    }\r\n\r\n    set onmousedown(fn) {\r\n        this.frame.onmousedown = fn\r\n    }\r\n\r\n    set onmouseup(fn) {\r\n        this.frame.onmouseup = fn\r\n    }\r\n\r\n    set onclick(fn) {\r\n        this.frame.onclick = fn\r\n    }\r\n\r\n    Aspect() {\r\n        return this.w / this.h\r\n    }\r\n\r\n    getCanvasRelativePosition(event) {\r\n        const rect = this.canvas.getBoundingClientRect();\r\n        return {\r\n          x: event.clientX - rect.left,\r\n          y: event.clientY - rect.top,\r\n        };\r\n    }\r\n\r\n    setPickPosition(event) {\r\n        let pickPosition = this.pickPosition\r\n        const pos = this.getCanvasRelativePosition(event);\r\n        pickPosition.x = (pos.x / this.w) *  2 - 1;\r\n        pickPosition.y = (pos.y / this.h) * -2 + 1;  // note we flip Y\r\n    }\r\n\r\n    clearPickPosition() {\r\n        let pickPosition = this.pickPosition\r\n        pickPosition.x = -100000;\r\n        pickPosition.y = -100000;\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { CanvasManager } from './canvas'\r\nimport * as THREE from 'three'\r\n// import { TrackballControls } from './traceballctrl'\r\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls'\r\n// import { DragControls } from 'three/examples/jsm/controls/DragControls'\r\n\r\nimport {FuzzyWarp, getDefaultFuzzyParams, Test} from './algo'\r\nimport { Vector3 } from 'three'\r\n\r\ninterface RenderProps {\r\n}\r\n\r\n\r\nconst Render : React.FC<RenderProps> = (props)=>{\r\n    const [handle, setHandle] = useState<ReturnType<typeof RunAll>>()\r\n    const [useWhat, setUseWhat] = useState('A')\r\n    useEffect(()=>{\r\n        setHandle(RunAll())\r\n    }, [])\r\n    \r\n    const next = () =>{\r\n        if(handle) {\r\n            setUseWhat(handle.next());\r\n        }\r\n    }\r\n\r\n    const transform = () =>{\r\n        if(handle) {\r\n            handle.transform();\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        using: {useWhat}\r\n        <button onClick={next}>\r\n        Toggle\r\n      </button>\r\n      <button onClick={transform}>\r\n        Transform\r\n      </button>\r\n    </div>)\r\n}\r\n\r\nexport default Render;\r\n\r\n\r\n\r\nfunction RunAll () {\r\nconst HandleResize = ()=>{Resize()}\r\nconst frame = document.getElementById('canvas-frame'); if(frame === null) return;\r\nconst scene = new THREE.Scene();\r\nconst renderer = new THREE.WebGLRenderer({antialias : true, powerPreference:'high-performance'});\r\nconst canvas = new CanvasManager(frame, renderer.domElement, renderer, HandleResize);\r\nconst camera = new THREE.PerspectiveCamera(75, canvas.Aspect(), 0.1, 1000);\r\n\r\nrenderer.setSize(canvas.w, canvas.h);\r\nrenderer.setClearColor(0x444444, 1.0);\r\n\r\ncamera.position.z = 5;\r\nvar Resize=() => {\r\n    console.log(canvas.w, canvas.h)\r\n    // camera.aspect = canvas.Aspect()\r\n    // camera.updateMatrix()\r\n}\r\nconst control = new TrackballControls(camera, frame)\r\n// const fpControl = new KeyControls(camera, frame)\r\ncontrol.target.set(0, 0, 0)\r\ncontrol.rotateSpeed = 8.0;\r\ncontrol.noPan = false\r\ncontrol.maxDistance = 60\r\ncontrol.keys = []\r\nconst ambientLight = new THREE.AmbientLight( 0x404040 ); // soft white light\r\nscene.add( ambientLight );\r\nvar light = new THREE.PointLight( 0xffffff, 1, 100 );\r\nlight.position.set( 10, 10, 10 );\r\nscene.add( light );\r\n\r\nvar plight = new THREE.PointLight( 0xffffff, 1, 200 );\r\nplight.position.set( -40, 20, 20 );\r\nscene.add( plight );\r\n\r\nvar light1 = new THREE.PointLight( 0xffffff, 1, 200 );\r\nlight1.position.set( -40, -20, -20 );\r\nscene.add( light1 );\r\n\r\nvar light2 = new THREE.PointLight( 0xffffff, 1, 200 );\r\nlight2.position.set( -20, 10, -10 );\r\nscene.add( light2 );\r\n\r\n\r\nconst fuzzyWarper = new FuzzyWarp();\r\n\r\nconst planegeo = new THREE.PlaneGeometry( 1000, 1000, 10, 10 );\r\nconst planeMesh = new THREE.Mesh(planegeo, new THREE.MeshBasicMaterial());\r\nplaneMesh.position.set(0, 0, 0)\r\nconst click_raycaster = new THREE.Raycaster();\r\n\r\nconst GetMouseOnPlane = () => {\r\n    let point = new THREE.Vector3(canvas.pickPosition.x, canvas.pickPosition.y, 5);\r\n    click_raycaster.setFromCamera(point, camera);\r\n    let hits = click_raycaster.intersectObject(planeMesh,true);\r\n    return hits[0].point;\r\n}\r\n\r\nconst dotsGroup = new THREE.Group();\r\nscene.add(dotsGroup)\r\n\r\n\r\nconst makeLineFromVertices = (v : Vector3[]) => {\r\n    const A_lineGeo = new THREE.Geometry();\r\n    A_lineGeo.vertices = v;\r\n    const A_lineMaterial = new THREE.LineBasicMaterial({ color: 0xffffff,  linewidth: 1})\r\n    return new THREE.Line(A_lineGeo, A_lineMaterial);\r\n}\r\n\r\nconst A_vertices = new Array<Vector3>()\r\nlet A_line = makeLineFromVertices(A_vertices)\r\nconst B_vertices = new Array<Vector3>()\r\nlet B_line = makeLineFromVertices(B_vertices)\r\n\r\nscene.add(A_line)\r\n\r\nlet useAorB = false\r\n\r\ncanvas.onclick = (event : any)=>{\r\n    canvas.setPickPosition(event);\r\n    const pointOnPlane = GetMouseOnPlane();\r\n    pointOnPlane.z = 0\r\n    \r\n    if(Math.abs(pointOnPlane.y) > 3.71) {\r\n        return;\r\n    }\r\n\r\n    // console.log(pointOnPlane)\r\n    if(!useAorB) {\r\n        A_vertices.push(pointOnPlane)\r\n        scene.remove(A_line)\r\n        A_line = makeLineFromVertices(A_vertices)\r\n        scene.add(A_line)\r\n    }\r\n    else {\r\n        B_vertices.push(pointOnPlane)\r\n        scene.remove(B_line)\r\n        B_line = makeLineFromVertices(B_vertices)\r\n        scene.add(B_line)\r\n    }\r\n    \r\n    /*\r\n    let pointGeo = new THREE.CircleGeometry( 0.05, 12 );\r\n    let dotMaterial = new THREE.MeshBasicMaterial( { color: 0xffffff } );\r\n    let dot = new THREE.Mesh( pointGeo, dotMaterial );\r\n    dot.position.set(pointOnPlane.x, pointOnPlane.y, pointOnPlane.z)\r\n    dot.userData = { id: dotsGroup.children.length }\r\n    dotsGroup.add( dot );*/\r\n}\r\n\r\n\r\nlet isTransforming = false\r\nlet time = 0\r\nconst deltaTime = 0.01\r\n// const deltaTime = 0.25\r\nlet middle = makeLineFromVertices(new Array<Vector3>())\r\nscene.add(middle)\r\n\r\nfunction render() {\r\n    requestAnimationFrame(render);\r\n    renderer.render(scene, camera);\r\n    if(isTransforming) {\r\n        if(time > 1) {\r\n            isTransforming = false\r\n        }\r\n        else {\r\n            time += deltaTime\r\n            scene.remove(middle)\r\n            const inted = fuzzyWarper.interp(time)\r\n            inted.push(inted[0])\r\n            middle = makeLineFromVertices(inted)\r\n            scene.add(middle)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst keyPoints = new THREE.Group()\r\nscene.add(keyPoints)\r\n\r\nconst addDots = (vec : Vector3[]) => {\r\n    [0xff0000, 0x00ff00, 0x0000ff].map((v, idx)=>{\r\n        const mat = new THREE.MeshBasicMaterial({color: v});\r\n        const geo = new THREE.CircleGeometry(0.06, 10)\r\n        const c = new THREE.Mesh(geo, mat);\r\n        c.position.set(vec[idx].x, vec[idx].y, vec[idx].z);\r\n        keyPoints.add(c)\r\n    })\r\n}\r\n\r\nconst triggerTransform = ()=>{\r\n    fuzzyWarper.init(A_vertices, B_vertices, getDefaultFuzzyParams())\r\n    addDots(fuzzyWarper.keyPoints.map(v=>{\r\n        return B_vertices[v]\r\n    }))\r\n\r\n    addDots(fuzzyWarper.keyPoints.map(v=>{\r\n        return A_vertices[fuzzyWarper.lookup[v]]\r\n    }))\r\n\r\n    isTransforming = true\r\n    time = 0\r\n\r\n}\r\n\r\nrender();\r\n\r\nTest()\r\n\r\nreturn {\r\n    next: ()=>{ useAorB = !useAorB; return useAorB? 'B' : 'A'  },\r\n    transform: ()=>{ triggerTransform() }\r\n}\r\n\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport Render from './render';\n\nconst App: React.FC = () => {\n  \n  return (\n    <div className=\"App\">\n      <div className=\"canvas\" id=\"canvas-frame\" style={{\n        width: 800,\n        height: 600\n      }}>\n        <Render>\n\n        </Render>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}